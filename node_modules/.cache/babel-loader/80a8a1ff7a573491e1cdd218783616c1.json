{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/monsters-rolodex/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport CardList from './components/card-list/card-list.components';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchField, setSearchField] = useState(''); //[value, setValue]\n\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  console.log(\"render\");\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  useEffect(() => {\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n  }, []);\n\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      placeholder: \"search monsters\",\n      onChangeHandler: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; // class App extends Component {\n//   constructor(){\n//     super();\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     };\n//   }\n//   componentDidMount(){\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//      .then((response) => response.json())\n//     //  .then((users) => console.log(users));\n//      .then((users) => this.setState(() => {return {monsters:users}}\n//     //  ,() => {console.log(this.state);}\n//      ));\n//   }\n//   onSearchChange = (event) => {\n//     const searchField = event.target.value.toLocaleLowerCase();\n//     this.setState(() => {\n//       return { searchField };\n//     });\n//   }\n//   render() {\n//     // const { monsters, searchField } = this.state;\n//     // const { onSearchChange } = this; \n//     const filteredMonsters = this.state.monsters.filter((monster) => {         \n//       //console.log('monster?: ' + monster.id);\n//       return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n//     });\n//     return (\n//       <div className=\"App\">\n//         <h1 className='app-title'>Monsters Rolodex</h1>\n//         <SearchBox className='monsters-search-box' placeholder='search monsters' onChangeHandler={this.onSearchChange}   />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(App, \"YjM+qWSyF3I2IMx5PoA1UagYOq0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","App","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilteredMonsters","console","log","fetch","then","response","json","users","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value"],"sources":["/Users/nanye/Desktop/monsters-rolodex/src/App.js"],"sourcesContent":["// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport CardList from './components/card-list/card-list.components';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () => {\n\n  const [searchField, setSearchField] = useState(''); //[value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  console.log(\"render\");\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users) => setMonsters(users));\n  }, []);  \n  \n  useEffect(() => {\n    const filteredMonsters = monsters.filter((monster) => {         \n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n  }, []);\n\n\n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox \n        className='monsters-search-box' \n        placeholder='search monsters' \n        onChangeHandler={onSearchChange}   \n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\n// class App extends Component {\n\n//   constructor(){\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: ''\n//     };\n//   }\n\n//   componentDidMount(){\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//      .then((response) => response.json())\n//     //  .then((users) => console.log(users));\n//      .then((users) => this.setState(() => {return {monsters:users}}\n//     //  ,() => {console.log(this.state);}\n//      ));\n//   }\n\n//   onSearchChange = (event) => {\n//     const searchField = event.target.value.toLocaleLowerCase();\n//     this.setState(() => {\n//       return { searchField };\n//     });\n//   }\n\n//   render() {\n\n//     // const { monsters, searchField } = this.state;\n//     // const { onSearchChange } = this; \n\n//     const filteredMonsters = this.state.monsters.filter((monster) => {         \n//       //console.log('monster?: ' + monster.id);\n//       return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n//     });\n\n//     return (\n//       <div className=\"App\">\n//         <h1 className='app-title'>Monsters Rolodex</h1>\n\n//         <SearchBox className='monsters-search-box' placeholder='search monsters' onChangeHandler={this.onSearchChange}   />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n\n// }\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CAFgB,CAEoC;;EACpD,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAACO,QAAD,CAAxD;EACAI,OAAO,CAACC,GAAR,CAAY,QAAZ;EAEAX,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,KAAD,IAAWT,WAAW,CAACS,KAAD,CAF5B;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMAhB,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAGF,QAAQ,CAACW,MAAT,CAAiBC,OAAD,IAAa;MACpD,OAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0CjB,WAA1C,CAAP;IACD,CAFwB,CAAzB;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAOA,MAAMkB,cAAc,GAAIC,KAAD,IAAW;IAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,iBAAnB,EAA1B;IACAf,cAAc,CAACmB,iBAAD,CAAd;EACD,CAHD;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAC,WAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MACE,SAAS,EAAC,qBADZ;MAEE,WAAW,EAAC,iBAFd;MAGE,eAAe,EAAEF;IAHnB;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,QAAD;MAAU,QAAQ,EAAEd;IAApB;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAvCD,C,CAyCA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;GAxFML,G;;KAAAA,G;AA0FN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}